@page "/playlists"
@using music_manager_starter.Shared

@inject HttpClient Http

@code {
    private List<Playlist> playlists;
    private List<Song> availableSongs;

    protected override async Task OnInitializedAsync()
    {
        playlists = await Http.GetFromJsonAsync<List<Playlist>>("api/playlists");
        availableSongs = await Http.GetFromJsonAsync<List<Song>>("api/songs");
    }

    private Playlist newPlaylist = new Playlist();
    private List<Song> SelectedSongs { get; set; } = new List<Song>();
    private string message;

    private void ToggleSelection(Song song)
    {
        if (SelectedSongs.Contains(song))
        {
            SelectedSongs.Remove(song);
        }
        else
        {
            SelectedSongs.Add(song);
        }

    }

    private async Task HandleValidSubmit()
    {
        foreach (var listSong in SelectedSongs)
        {
            Console.WriteLine(listSong.Title);
        }

        foreach (var selectedSong in SelectedSongs)
        {
            newPlaylist.Songs.Add(selectedSong);
        }

        var response = await Http.PostAsJsonAsync("api/playlists", newPlaylist);
        if (response.IsSuccessStatusCode)
        {
            message = "Playlist added successfully!";
            newPlaylist = new Playlist();
        }
        else
        {
            message = "Error adding playlist. Please try again.";
        }
    }
}
<div class="p-0 min-h-screen bg-pattern flex flex-col items-center justify-center">
    <h2 class="text-3xl font-bold text-white mb-8 text-center">Playlists</h2>
    <EditForm Model="newPlaylist" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-4">
            <label class="block text-gray-200">Playlist Name</label>
            <InputText @bind-Value="newPlaylist.Name" class="mt-1 block w-full p-2 border rounded" />
        </div>
        @foreach (var song in availableSongs)
        {
            <div class="text-gray-200">
                <input type="checkbox" @onchange="() => ToggleSelection(song)" /> @song.Title
            </div>
        }

        <button type="submit" class="bg-purple-600 px-4 py-2 text-white hover:scale-105 rounded">
            Add new playlist
        </button>
    </EditForm>

    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
        @if (playlists != null && playlists.Count > 0)
        {
            @foreach (var playlist in playlists)
            {
                <div class="glass p-6 border border-gray-300 rounded-lg text-white transition-transform transform hover:scale-105 hover:shadow-xl cursor-pointer">
                    <h3 class="text-xl font-semibold mb-2">@playlist.Name</h3>
                    @foreach (var song in playlist.Songs)
                    {                 
                    <p class="text-md">Artist: <span class="font-light">@song.Title</span></p>
                    }

                </div>
            }
        }
        else
        {
            <div class="col-span-1 text-center text-gray-400">No playlists found.</div>
        }
        @if (message != null)
        {
            <p class="mt-4 text-green-500">@message</p>
        }
    </div>
</div>

<style>
    .bg-pattern {
        background: linear-gradient( rgba(31, 41, 55, 0.7), rgba(31, 41, 55, 0.7) ), url('dalle.webp');
        background-size: cover;
        background-position: center;
        font-family: 'Rajdhani', sans-serif;
    }



    .glass {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 10px;
        position: relative;
        overflow: hidden;
    }

        .glass:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            pointer-events: none;
        }
</style>